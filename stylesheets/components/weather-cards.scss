@use "../abstracts/" as *;

.cards {
  display: flex;
  flex-wrap: wrap;
  width: 300px;
}

.card {
  max-width: 100%;
  width: 100%;
  border: none;
  border-radius: 10px;
  height: auto;
  padding: {
    inline: 2.4rem;
    block: 0.5rem;
  }
  background-color: #4799e5;
  margin-block: 1em;
  transition: box-shadow 0.3s ease-in-out;

  &:hover {
    cursor: pointer;
    box-shadow: -10px 14px 14px 0px rgba(0, 0, 0, 0.63);
  }
  // &:has
}

// .card-icons:has() {

// }

.weather-icon {
  max-width: 30px;
  height: 30px;
  display: block;
  align-self: center;
  /*   margin-inline-start: 1em; */
  // margin-block-start: 1.5em;
}

.card__container {
  @include flexbox-config($justify-content: space-between);
  flex-wrap: wrap;
  padding-block: 1.5rem;
}

.card__text {
  grid-template-columns: 1fr;
  display: grid;
  grid-template-rows: repeat(2, 1fr);

  > h2 {
    grid-row: 1;
    color: $white;
    font-size: clamp(1.25rem, 0.714rem + 2.857vw, 2.5rem);
    + p {
      grid-row: 3;
    }
  }
}

// TODO: fix
.card__icons {
  grid-template-columns: 1fr;
  display: grid;
  grid-template-rows: repeat(3, 1fr);

  > p {
    grid-row: 1;
    + .weather-icon {
      grid-row: 2;
      + .remove-btn {
        grid-row: 4;
        &:hover {
          cursor: pointer;
        }
      }
    }
  }
}
// things to experiment with
// has
// container queries
// svgs
// media query range syntax
// text wrap balance
// margin-trim
// logical properties
// custom properties for background colours- primary colors
